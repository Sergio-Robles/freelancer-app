:root {
    color: #212121;
}
/* --oscuro: #212121  Esto es para las custom variables, y se almacenan al 
principio del proyecto. Aqui las usare para crear colores.*/

html {
    box-sizing: border-box;
    min-height: 100%;
    font-size: 62.5%;
    /*font-size: 62.5% es para los rem, que nos permite no tener que usar
    los pixeles porque la densidad de pantalla de los nuevos dispositivos
    es mayor, por lo que se veria extra√±o con px. Los rem se adapta mejor. El
    62.5% es porque por default los navegadores intentar rendear a 16px
    y el 62.5% de 16 es 10. Por eso, 1.6rem = a 6px. El 1.6rem lo 
    pondremos en la etiqueta de body. */
}
*, *:before, *:after {
    box-sizing: inherit;
}
/*Esto es para los bordes. De la pagina:
https://www.paulirish.com/2012/box-sizing-border-box-ftw/
*/

body {
    min-height: 100%;
    background-image: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);
    /*Sitio web de gradientes para CSS: webgradients.com
    min-height es para que coja todo el espacio. Tambien se pondra en
    la etiqueta html en la parte de arriba.*/
    font-size: 1.6rem;
}
.site-header nav {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 2rem;

    display: flex;
    /*Otros justify-content: flex-end, flex-start, space-around o space-evenly*/
    /*El flex-box funciona en default de izquierda a derecha, teniendo un 
    flex-direction: row. Si quisiera cambiarle la direccion tengo que poner
    flex-direction: column, entonces ira de arriba a abajo la orientacion.
    El orden de los elementos pueden cambiarse con flex-direction: row-reverse*/
    flex-direction: column;
    align-items: center;
}
@media (min-width: 768px) {
    .site-header nav {
        flex-direction: row;
        justify-content: space-between;
    }
}
.site-header {
    background-color: #ffffff;
}
.site-header nav a {
    color: #212121;
    font-size: 2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}
.site-header nav a:last-of-type {
    margin-bottom: 0;
}
@media (min-width: 768px) {
    .site-header nav a {
        margin-bottom: 0;
    }
}

.hero {
    height: 30rem;
    background-image: url(../img/hero.jpg);
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    /*display:flex y justify-content:center le daran el alineado
    horizontal, y el alineado vertical sera align-items:center*/

}
.hero::after {
    content:'';
    background-color: rgba(0,0,0, .7);
    /*Esto es para poner el color de fondo gris a la imagen.
    Puede hacerse con photoshop pero si necesita cambios seria 
    mas complicado. Se pone el hero::afer, que siempre ira 
    con un content: ''; y el background-color elegido.
    El .7 es la transparencia*/
    position: absolute;
    /*Aqui se pone position:absolute, por lo que tendre que poner en
    .hero position:relative*/
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /*Todos estos elementos son necesarios para que funcione.*/
}
.contenedor-hero {
    color: white;
    position: relative;
    z-index: 1;
    /*El z-index hara que el elemento sobresalga del fondo y pueda obtener
    las caracteristicas que le hemos dado de color*/
    text-align: center;
}
.boton {
    background-color: #0097a7;
    padding: 1rem 4rem;
    display: inline-block;
    margin-top: .6rem;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 1.5rem;
    border-radius: .4rem;
}



